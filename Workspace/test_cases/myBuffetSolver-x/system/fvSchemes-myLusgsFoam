/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


dbnsFlux AUSMplusUpFlux;

AUSMplusUpFluxCoeffs {
   MaInf 0.2;
   printCoeffs true;
}

ddtSchemes
{
    default         backward;
}

gradSchemes
{
    default         Gauss linear;
    limitedGauss    cellLimited Gauss linear 1;
    venkatakrishnan cellLimited<Venkatakrishnan> Gauss linear 1;
}

divSchemes
{
    default         none;
    div(devRhoReff) Gauss linear;
    div((devRhoReff&U)) Gauss linear;

    div(phi,k)      Gauss linearUpwind venkatakrishnan;
    div(phi,omega)  Gauss linearUpwind venkatakrishnan;
    div(tauMC)       Gauss linear;
    div(phi,nuTilda) bounded Gauss upwind phi;
    div(phi,k)       bounded Gauss upwind phi;
    div(phi,omega)   bounded Gauss upwind phi;
    div(phi,Ret)    bounded Gauss linear;
    div(phi,im) bounded Gauss linear;
    div((nuEff*dev2(T(grad(U))))) Gauss linear;

}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
    reconstruct(p) linearUpwind  venkatakrishnan; 
    reconstruct(U) linearUpwindV venkatakrishnan; 
    reconstruct(T) linearUpwind  venkatakrishnan; 
}

snGradSchemes
{
    default         corrected;
}

wallDist {
  method meshWave;
}
// ************************************************************************* //
