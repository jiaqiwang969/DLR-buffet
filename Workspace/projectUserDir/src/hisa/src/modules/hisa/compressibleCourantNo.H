/*---------------------------------------------------------------------------*\

    HiSA: High Speed Aerodynamic solver

    Copyright (C) 2014-2018 Johan Heyns - CSIR, South Africa
    Copyright (C) 2014-2018 Oliver Oxtoby - CSIR, South Africa
    Copyright (C) 2012 OpenFOAM Foundation

-------------------------------------------------------------------------------
License
    This file is part of HiSA.

    HiSA is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HiSA is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HiSA.  If not, see <http://www.gnu.org/licenses/>.

Global
    compressibleCourantNo

Description
    Calculates the mean and maximum wave speed based Courant Numbers.

\*---------------------------------------------------------------------------*/

scalar CoNum = 0.0;
scalar meanCoNum = 0.0;

if (mesh.nInternalFaces())
{
    tmp< surfaceScalarField > lambda;
    if (mesh.moving())
    {
        lambda = fvc::interpolate(sqrt(thermo.gamma()/thermo.psi())) + mag((fvc::interpolate(U)&mesh.Sf())-fvc::meshPhi(U))/mesh.magSf();
    }
    else
    {
        lambda = fvc::interpolate(sqrt(thermo.gamma()/thermo.psi())) + mag(fvc::interpolate(U)&mesh.Sf()/mesh.magSf());
    }

    surfaceScalarField amaxSfbyDelta
    (
        lambda*mesh.magSf()*mesh.deltaCoeffs()
    );

    CoNum = max(amaxSfbyDelta/mesh.magSf()).value()*runTime.deltaTValue();

    meanCoNum =
        (sum(amaxSfbyDelta)/sum(mesh.magSf())).value()
       *runTime.deltaTValue();
}

Info<< "Mean and max Courant Numbers = "
    << meanCoNum << " " << CoNum << endl;

// ************************************************************************* //
