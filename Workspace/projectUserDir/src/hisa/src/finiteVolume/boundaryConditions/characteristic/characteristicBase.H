/*---------------------------------------------------------------------------*\

    HiSA: High Speed Aerodynamic solver

    Copyright (C) 2014-2018 Johan Heyns - CSIR, South Africa
    Copyright (C) 2014-2018 Oliver Oxtoby - CSIR, South Africa
    Copyright (C) 2011-2012 OpenFOAM Foundation

-------------------------------------------------------------------------------
License
    This file is part of HiSA.

    HiSA is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HiSA is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HiSA.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::characteristicBase

Group
    grpInletBoundaryConditions grpOutletBoundaryConditions

Description
    Base class for characteristic boundary conditions.

    For more detail please refer to Blazek (J. Blazek, Computational Fluid 
    Dynamics: Principles and Applications, Elsevier, 2001) and Lohner 
    (R. LÃ¶hner, An Introduction to Applied Computational Fluid Dynamics 
    Techniques, John Wiley and sons, 2001).

    \heading Patch usage

    \table
        Property   | Description                 | Required  | Default value
        U          | external velocity           | yes       |
        p          | external pressure           | yes       |
        T          | external temperature        | yes       |
        UName      | Velocity field name         | no        | U
        pName      | Pressure field name         | no        | p
        TName      | Temperature field name      | no        | T
        rhoName    | Density field name          | no        | rho
        phiName    | Mass flux field name        | no        | phi
        psiName    | Compressibility field name  | no        | thermo:psi
    \endtable

    Example of the boundary condition specification:
    \verbatim
    myPatch
    {
        type            characteristicFarfieldPressure;
        U               500;
        p               1e4;
        T               265;
    }
    \endverbatim

SourceFiles
    characteristicBase.C

Authors
    Johan Heyns
    Oliver Oxtoby
        Council for Scientific and Industrial Research, South Africa

\*---------------------------------------------------------------------------*/

#ifndef characteristicBase_H
#define characteristicBase_H

#include "fvPatchFields.H"
#include "mixedFvPatchFields.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
      Class characteristicBase Declaration
\*---------------------------------------------------------------------------*/

class characteristicBase
{
protected:
    // Protected data

        //- Name of velocity field, default = "U"
        word UName_;

        //- Name of velocity field, default = "p"
        word pName_;

        //- Name of temperature field, default = "T"
        word TName_;

        //- Name of mass flux field, default = "phi"
        word phiName_;

        //- Name of density field, default = "rho"
        word rhoName_;

        //- External (specified) velocity
        vector URef_;

        //- External (specified) pressure
        scalar pRef_;

        //- External (specified) temperature
        scalar TRef_;


public:

    //- Runtime type information
    TypeName("characteristicBase");


    // Constructors

        //- Construct from patch and internal field
        characteristicBase
        (
            const fvPatch&
        );

        //- Construct from patch, internal field and dictionary
        characteristicBase
        (
            const fvPatch&,
            const dictionary&
        );

        //- Construct by mapping given characteristicBase
        //  onto a new patch
        characteristicBase
        (
            const characteristicBase&,
            const fvPatch&,
            const fvPatchFieldMapper&
        );

        //- Construct as copy
        characteristicBase
        (
            const characteristicBase&
        );

    //- Destructor
    virtual ~characteristicBase() 
    {};


    // Member functions

        // Access

            //- Return the external velocity
            const vector& URef() const
            {
                return URef_;
            }

            //- Return reference to the external velocity to allow adjustment
            vector& URef()
            {
                return URef_;
            }

            //- Return the external pressure
            scalar pRef() const
            {
                return pRef_;
            }

            //- Return reference to the external pressure to allow adjustment
            scalar& pRef()
            {
                return pRef_;
            }

            //- Return the temperature at infinity
            scalar TRef() const
            {
                return TRef_;
            }

            //- Return reference to the external temperature
            //  to allow adjustment
            scalar& TRef()
            {
                return TRef_;
            }


        //- Write
        virtual void write(Ostream&) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
