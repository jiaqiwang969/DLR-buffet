/*---------------------------------------------------------------------------*\

    HiSA: High Speed Aerodynamic solver

    Copyright (C) 2018 Oliver Oxtoby - CSIR, South Africa
    Copyright (C) 2018 Johan Heyns - CSIR, South Africa
    Copyright (C) 2011-2016 OpenFOAM Foundation

-------------------------------------------------------------------------------
License
    This file is part of HiSA.

    HiSA is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HiSA is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HiSA.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::functionObjects::writeFields

Group
    grpFieldFunctionObjects

Description
    Reads fields from the mesh database and outputs them to the time
    directories.

    Example of function object specification:
    \verbatim
    writeFields1
    {
        type        writeFields;
        libs        ("libhisaFunctionObjects.so");
        writeControl writeTime;
        
        fields
        (
            rho
        );
    }
    \endverbatim

Usage
    \table
        Property     | Description             | Required    | Default value
        type         | type name: writeFields  | yes         |
        fields       | list of fields to read  |  no         |
    \endtable

See also
    Foam::functionObjects::readFields

SourceFiles
    writeFields.C

\*---------------------------------------------------------------------------*/

#ifndef functionObjects_writeFields_H
#define functionObjects_writeFields_H

#include "fvMeshFunctionObject.H"
#include "volFieldsFwd.H"
#include "surfaceFieldsFwd.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
namespace functionObjects
{

/*---------------------------------------------------------------------------*\
                         Class writeFields Declaration
\*---------------------------------------------------------------------------*/

class writeFields
:
    public fvMeshFunctionObject
{
protected:

    // Protected data

        //- Fields to load
        wordList fieldSet_;


private:

    // Private member functions

        //- Disallow default bitwise copy construct
        writeFields(const writeFields&);

        //- Disallow default bitwise assignment
        void operator=(const writeFields&);


public:

    //- Runtime type information
    TypeName("writeFields");


    // Constructors

        //- Construct for given objectRegistry and dictionary.
        //  Allow the possibility to load fields from files
        writeFields
        (
            const word& name,
            const Time& runTime,
            const dictionary& dict
        );


    //- Destructor
    virtual ~writeFields();


    // Member Functions

        //- Read the set of fields from dictionary
        virtual bool read(const dictionary&);

        //- Do nothing
        virtual bool execute();

        //- Write the fields
        virtual bool write();
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace functionObjects
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
