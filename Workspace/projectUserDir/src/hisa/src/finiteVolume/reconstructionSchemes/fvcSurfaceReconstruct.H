/*---------------------------------------------------------------------------*\

    HiSA: High Speed Aerodynamic solver

    Copyright (C) 2018 Oliver Oxtoby - CSIR, South Africa
    Copyright (C) 2018 Johan Heyns - CSIR, South Africa
    Copyright (C) 2011-2016 OpenFOAM Foundation

-------------------------------------------------------------------------------
License
    This file is part of HiSA.

    HiSA is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HiSA is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HiSA.  If not, see <http://www.gnu.org/licenses/>.

InNamespace
    Foam::fvc

Description
    Face value reconstruction

SourceFiles
    fvcReconstruct.C

\*---------------------------------------------------------------------------*/

#ifndef fvcSurfaceReconstruct_H
#define fvcSurfaceReconstruct_H

#include "tmp.H"
#include "volFieldsFwd.H"
#include "surfaceFieldsFwd.H"
#include "reconstructionScheme.H"
#include "one.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                     Namespace fvc functions Declaration
\*---------------------------------------------------------------------------*/

namespace fvc
{
    //- Calculate left and right states
    template<class Type>
    static void surfaceReconstruct
    (
        const GeometricField<Type, fvPatchField, volMesh>& vf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_L,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_R,
        const word& name
    );

    //- Calculate left and right states
    template<class Type>
    static void surfaceReconstruct
    (
        tmp<GeometricField<Type, fvPatchField, volMesh>>& tvf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_L,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_R,
        const word& name
    );

    //- Calculate left and right states
    template<class Type>
    static void surfaceReconstruct
    (
        const GeometricField<Type, fvPatchField, volMesh>& vf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_L,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_R
    );

    //- Calculate left and right states
    template<class Type>
    static void surfaceReconstruct
    (
        tmp<GeometricField<Type, fvPatchField, volMesh>>& tvf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_L,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& sf_R
    );

    //- Calculate left or right state
    template<class Type>
    static tmp<GeometricField<Type, fvsPatchField, surfaceMesh>> surfaceReconstruct
    (
        const GeometricField<Type, fvPatchField, volMesh>& vf,
        const GeometricField<Type, fvsPatchField, surfaceMesh>& select_LR,
        const word& name=word::null
    );

    //- Calculate left or right state
    template<class Type>
    static tmp<GeometricField<Type, fvsPatchField, surfaceMesh>> surfaceReconstruct
    (
        const GeometricField<Type, fvPatchField, volMesh>& vf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& tselect_LR,
        const word& name=word::null
    );

    //- Calculate left or right state
    template<class Type>
    static tmp<GeometricField<Type, fvsPatchField, surfaceMesh>> surfaceReconstruct
    (
        tmp<GeometricField<Type, fvPatchField, volMesh>>& tvf,
        const GeometricField<Type, fvsPatchField, surfaceMesh>& select_LR,
        const word& name=word::null
    );

    //- Calculate left or right state
    template<class Type>
    tmp<GeometricField<Type, fvsPatchField, surfaceMesh>> surfaceReconstruct
    (
        tmp<GeometricField<Type, fvPatchField, volMesh>>& tvf,
        tmp<GeometricField<Type, fvsPatchField, surfaceMesh>>& tselect_LR,
        const word& name=word::null
    );

}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#ifdef NoRepository
    #include "fvcSurfaceReconstruct.C"
#endif

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
