#!/bin/bash

#SBATCH --job-name=runFoam-test-parallel
#SBATCH --partition=64c512g
#SBATCH -n 64
#SBATCH --ntasks-per-node=64
#SBATCH --output=%j.out
#SBATCH --error=%j.err

#1. Load the necessary modules
#module load singularity
 
#2. Defining the container to be used
theRepo=/dssg/home/acct-medgm/medgm/00-sif
theContainerBaseName=openfoam
theVersion=v2012
theProvider=pawsey
theImage=$theRepo/$theContainerBaseName-$theVersion-$theProvider.sif
 
#3. Defining the case directory

project_name=03-hisa
foam_numberOfSubdomains=64
#~~~~~~~~~~~~~~~~~~~~~#
theSolver=hisa
foam_Mach="1.05"
foam_writeInterval="1.0e-5"
foam_maxCo="50";
foam_endTime="0.1"
foam_deltaT="5.0e-7"
foam_startFrom="startTime"
foam_writeFormat="binary"
foam_runTimeModifiable="true"
foam_purgeWrite=0
foam_fluxSchemes="AUSMPlusUp"
foam_polyMesh_type="long"
poutlet="80000" #70000,74000 78000,82000,86000,90000,94000,98000,100000,102000,106000,110000

caseName=02-$theSolver-$foam_Mach-$foam_fluxSchemes-maxCo$foam_maxCo-$foam_deltaT-$foam_polyMesh_type-pout$poutlet
polyMeshName=polyMesh-igg-final-$foam_polyMesh_type
#~~~~~~~~~~~~~~~~~~~~~#


projectUserDir=$SLURM_SUBMIT_DIR/../../projectUserDir
baseWorkingDir=$SLURM_SUBMIT_DIR/../../run
caseDir=$baseWorkingDir/$caseName
logsDir=$caseDir/logs/pre

#3.1 User extra defined



#4. Copy the file to run
mkdir -p $baseWorkingDir
#rm -rf $baseWorkingDir/$caseName
cp -rf $SLURM_SUBMIT_DIR/../../test_cases/$project_name  $caseDir

# create log directory
if ! [ -d $logsDir ]; then
   mkdir -p $logsDir
fi


#5. Defining OpenFOAM controlDict settings for Pawsey Best Practices
cd $caseDir
rm -rf *.err
rm -rf *.out
cp -rf constant/$polyMeshName constant/polyMesh
rm -rf constant/polyMesh-igg*
rm -rf constant/igg*

echo "----------> restore0Dir"
mv 0_org 0
#5. controlDict Setting
sed -i 's,^writeFormat.*,writeFormat    '"$foam_writeFormat"';,' ./system/controlDict
sed -i 's,^runTimeModifiable.*,runTimeModifiable    '"$foam_runTimeModifiable"';,' ./system/controlDict
sed -i 's,^purgeWrite.*,purgeWrite    '"$foam_purgeWrite"';,' ./system/controlDict
sed -i 's,^startFrom.*,startFrom    '"$foam_startFrom"';,' ./system/controlDict
sed -i 's,^deltaT.*,deltaT    '"$foam_deltaT"';,' ./system/controlDict
sed -i 's,^writeInterval.*,writeInterval    '"$foam_writeInterval"';,' ./system/controlDict
sed -i 's,^maxCo.*,maxCo    '"$foam_maxCo"';,' ./system/controlDict
sed -i 's,^endTime.*,endTime    '"$foam_endTime"';,' ./system/controlDict
sed -i 's,^numberOfSubdomains.*,numberOfSubdomains    '"$foam_numberOfSubdomains"';,' ./system/decomposeParDict
#6. Parameter define
sed -i 's,^Mach.*,Mach    '"$foam_Mach"';,' ./0/U
sed -i 's,^poutlet.*,poutlet    '"$poutlet"';,' ./0/U
sed -i 's,^poutlet.*,poutlet    '"$poutlet"';,' ./0/T
sed -i 's,^poutlet.*,poutlet    '"$poutlet"';,' ./0/p
#7. 0.005 for latest time NRBCx 
sed -i 's,82000,'"$poutlet"',' ./0.01/U
sed -i 's,82000,'"$poutlet"',' ./0.01/T
sed -i 's,82000,'"$poutlet"',' ./0.01/p

#7. Scheme define
sed -i 's,^fluxScheme.*,fluxScheme    '"$foam_fluxSchemes"';,' ./system/fvSchemes

#6. Reading the OpenFOAM decomposeParDict settings
#echo "Reading decomposeParDict"
#foam_numberOfSubdomains=$(grep "^numberOfSubdomains" ./system/decomposeParDict | tr -dc '0-9')


#-> where I am
echo "----------> where I am: $SLURM_SUBMIT_DIR"

## Main CASE
echo "----------> cd to $caseDir"
cd $caseDir

#echo "Cleaning files"
#singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage foamCleanTutorials 2>&1 | tee $logsDir/log.foamCleanTutorials.$SLURM_JOBID


touch foam.foam
#echo "----------> blockMesh"
#singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage blockMesh 2>&1 | tee $logsDir/log.blockMesh_main.$SLURM_JOBID

#echo "----------> Run surfaceFeatureExtract"
#singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage surfaceFeatureExtract 2>&1 | tee $logsDir/log.surfaceFeatureExtract.$SLURM_JOBID


#echo "----------> decomposePar"
#singularity run -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage decomposePar -force 2>&1 | tee $logsDir/log.decomposePar.$SLURM_JOBID


#foam_numberOfSubdomains=$(grep "^numberOfSubdomains" ./system/decomposeParDict | tr -dc '0-9')
#echo "----------> Run snappyHexMesh on $foam_numberOfSubdomains cores"
#srun --mpi=pmi2 singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage snappyHexMesh -parallel -overwrite 2>&1 | tee $logsDir/log.snappyHexMesh.$SLURM_JOBID


#echo "----------> Reconstruct mesh to /constant directory"
#singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage reconstructParMesh -constant 2>&1 | tee $logsDir/log.reconstructParMesh.$SLURM_JOBID



echo "----------> Decompose"
singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage decomposePar -force 2>&1 | tee $logsDir/log.decomposePar2.$SLURM_JOBID

#echo "----------> RenumberMesh for parallelisation optimization "
#srun --mpi=pmi2 singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage renumberMesh  -parallel 2>&1 | tee $logsDir/log.renumberMesh.$SLURM_JOBID

echo "----------> run the $theSolver"
srun --mpi=pmi2 singularity exec -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage $theSolver -parallel 2>&1 | tee $logsDir/log.$theSolver.$SLURM_JOBID
echo "----------> solver done"


#endTime1=$(grep "^endTime" ./system/controlDict | grep -oP '\d*\.\d+' )
#echo "----------> run reconstructPar in Parallel"
#singularity run -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage reconstructParallel n=$foam_numberOfSubdomains start=0 end=$endTime1 

#echo "----------> Reconstruct latest result"
#singularity run -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage reconstructPar  2>&1 | tee $logsDir/log.reconstructPar.$SLURM_JOBID

#echo "----------> Sampling"
#singularity run -B $projectUserDir:/home/ofuser/OpenFOAM/ofuser-$theVersion $theImage postProcess -func sampleDict  2>&1 | tee $logsDir/log.sampling.$SLURM_JOBID

echo "----------> script done"
